<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>learning on After1995</title>
    <link>https://endfang.github.io/tags/learning/</link>
    <description>Recent content in learning on After1995</description>
    <image>
      <url>https://endfang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://endfang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 17 Mar 2021 01:06:35 +0800</lastBuildDate><atom:link href="https://endfang.github.io/tags/learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unity Rendering Optimization</title>
      <link>https://endfang.github.io/posts/rendering-optimization/</link>
      <pubDate>Wed, 17 Mar 2021 01:06:35 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/rendering-optimization/</guid>
      <description>Q; The ways of optimizting?
  Static Batching.
Objects are explicitly specified to be static. It can&amp;rsquo;t have any change in transform. It also requires additional memory to store combined geometry. 100 objects are 100 copy.
  Dynamic Batching
The mesh and materials need to be the same, and the mesh must have less than 300 vertices. The objects should not moving around. Shaders should have one pass. Instanced materials and lightmapping are not allowed.</description>
    </item>
    
    <item>
      <title>Unity Overdraw</title>
      <link>https://endfang.github.io/posts/unity-overdraw/</link>
      <pubDate>Mon, 08 Feb 2021 01:23:06 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/unity-overdraw/</guid>
      <description>Achieving 60FPS on mobile, Youtube
Optimizing Graphics in Unity, Unity
Overdraw Overdrawn is to draw one pixel more than once. Post-processing will re-touch the pixel at least once. It adds burdens to the GPU and delays the frame.
Rendering is done by draw calls. The intermediate steps are not on the screen but in frame buffers. A frame buffer is a memory buffer that contains data representing the pixels in a complete video frame.</description>
    </item>
    
    <item>
      <title>Magenta</title>
      <link>https://endfang.github.io/posts/magenta/</link>
      <pubDate>Tue, 22 Dec 2020 14:35:52 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/magenta/</guid>
      <description>Lovecraft&amp;rsquo;s described a color outside of the visible spectrum in his novel Color Out of Space. This color was emitted from an alien creature which destroyed an area later in the. Even though the idea of a color that is outside the spectrum sounds illogical, but magenta is such color. We can see magenta, but it doesn&amp;rsquo;t exist in the spectrum.
Magenta is loosely defined as purplish-red or reddish-purple. In color wheels of the RGB, it is located exactly midway between red and blue.</description>
    </item>
    
    <item>
      <title>Unity EditorWindow And Assetprocessor</title>
      <link>https://endfang.github.io/posts/unity-editorwindow-and-assetpostprocessor/</link>
      <pubDate>Mon, 30 Nov 2020 01:18:33 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/unity-editorwindow-and-assetpostprocessor/</guid>
      <description>Tutorials Editor folder contains any editor scripts. It allows no mono behavior scripts in it.
AssetPostprocessor is one of the editor class. One of the properties is assetPath, the path name of the asset being imported.
A series of function is called in the following order during the model import:
 OnPreprocessModel: I can override ModelImporter settings in here. After meshes and materials are imported, GameObjects hierarchy is created from the imported nodes.</description>
    </item>
    
    <item>
      <title>Matrix Calculation</title>
      <link>https://endfang.github.io/posts/matrixcalculation/</link>
      <pubDate>Wed, 18 Nov 2020 14:54:20 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/matrixcalculation/</guid>
      <description>&lt;h1 id=&#34;gaussian-elimination&#34;&gt;Gaussian Elimination&lt;/h1&gt;
&lt;p&gt;Gaussian Elimination is used to solve a system of linear equations. It transforms the matrix into a reduced row-echelon form.&lt;/p&gt;
&lt;p&gt;The transformation is completed with the row operations. We can swap rows, multiply rows by a nonzero number, and adding one row to another. In such a way, the matrix will become an upper triangular matrix whose all leading coefficients are 1.&lt;/p&gt;
&lt;p&gt;for example, the following equations can be transform to the matrix:
$$
\begin{align}
\nonumber r_0 + r_1 = 26 \&lt;br&gt;
\nonumber r_1 + r_2 = 20 \&lt;br&gt;
\nonumber r_0 = 2r_2 \&lt;br&gt;
\end{align}
$$&lt;/p&gt;
&lt;p&gt;$$
\begin{vmatrix}
1 &amp;amp;&amp;amp; 1 &amp;amp;&amp;amp; 0 &amp;amp;&amp;amp; 26 \&lt;br&gt;
0 &amp;amp;&amp;amp; 1 &amp;amp;&amp;amp; 1 &amp;amp;&amp;amp; 20 \&lt;br&gt;
1 &amp;amp;&amp;amp; 0 &amp;amp;&amp;amp; -2 &amp;amp;&amp;amp; 0 \&lt;br&gt;
\end{vmatrix}
$$&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Binary, Decimal, Graycode</title>
      <link>https://endfang.github.io/posts/binary-decimal-and-graycode/</link>
      <pubDate>Sun, 26 May 2019 11:21:31 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/binary-decimal-and-graycode/</guid>
      <description>Gray code Gray code can reduce the errors of changing bits (or switches). It only needs to change 1 bit at a time to increments the decimal number.
Example 1    decimal binary gray code     5 101 111   6 110 101    From 5 to 6, binary has two bits changed, while gray code only changed 1 bit.
XOR is the method of converting binary to gray code.</description>
    </item>
    
    <item>
      <title>Rotation Matrix</title>
      <link>https://endfang.github.io/posts/rotation-matrix/</link>
      <pubDate>Tue, 14 May 2019 18:19:27 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/rotation-matrix/</guid>
      <description>$P = (x, y) = (1, 0)$	$P&#39; = (x&#39;, y&#39; )$
$\cos{\theta} = \frac{x&#39;}{x}$ $\sin{\theta} = \frac{y&#39;}{x}$
therefore:
$x&#39; = \cos{\theta} \cdot x$	$y&#39; = \sin{\theta} \cdot x$
similarly:
$Q = (x, y) = (0, 1)$ $ Q&#39; = (x&#39;, y&#39; )$
$\cos{\theta} = \frac{y&#39;}{y}$ $\sin{\theta} = \frac{-x&#39;}{y}$
therefore:
$x&#39; = -\sin{\theta} \cdot y$ $y&#39; = \cos{\theta} \cdot y$
add them together:
$\begin{bmatrix} \cos{\theta} &amp;amp; -\sin{\theta} \\
\sin{\theta} &amp;amp; \cos{\theta} \\</description>
    </item>
    
    <item>
      <title>Matplotlib, Figure, Axes, Axis, And Subplot</title>
      <link>https://endfang.github.io/posts/figre-axes-and-axis/</link>
      <pubDate>Wed, 30 Jan 2019 17:07:41 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/figre-axes-and-axis/</guid>
      <description>Figure, Axes, Axis, and Subplot As we can see, the Figure is a top-level container that includes &amp;ldquo;Axes&amp;rdquo; and &amp;ldquo;Axis&amp;rdquo;.&amp;ldquo;Axes&amp;rdquo; is the area where plots appear, while &amp;ldquo;Axis&amp;rdquo; is the axis of the plots.
Axes is set up by calling subplot, so &amp;ldquo;Axes&amp;rdquo; and &amp;ldquo;Subplot&amp;rdquo; are synonymous in many cases.
Subplot vs. Axes Subplot can arrange grid. plt.subplot(row, col, index) return me an area where occupies part of the Figure. For example:</description>
    </item>
    
    <item>
      <title>Dot Product</title>
      <link>https://endfang.github.io/posts/dot-product/</link>
      <pubDate>Sun, 27 Jan 2019 16:39:43 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/dot-product/</guid>
      <description>Reference: &amp;ldquo;Dot products and duality | Essence of linear algebra, chapter 9&amp;rdquo;, 3Blue1Brown
Algebra example:
$\begin{bmatrix} 1 &amp;amp; 2 \end{bmatrix} \cdot \begin{bmatrix} 3 \ 4 \end{bmatrix} = 1 \cdot 3 + 2 \cdot 4$
Gemoetrically:
![projection](https://i.imgur.com/HYJeePM.png =150x150)
The dot product of v and u = (length of projection of v onto u)(length of u)
Order and Symmetry Order doesn&amp;rsquo;t matter. (Length of projected v) x (Length of u) = (Length of projected u) x (Length of v)</description>
    </item>
    
    <item>
      <title>Minimax Search</title>
      <link>https://endfang.github.io/posts/minimax-search/</link>
      <pubDate>Sun, 02 Dec 2018 18:49:03 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/minimax-search/</guid>
      <description>Games as search &amp;ldquo;max&amp;rdquo; and &amp;ldquo;min&amp;rdquo; two players. Max moves frist in the game. The game take turns until it&amp;rsquo;s over. Max uses search tree to determine &amp;ldquo;best&amp;rdquo; next move.
Definitions
 initial state: set-up defined by rules player(s): which player has the move in state s actions(s): set of legal moves in state results(s, a): transition model defines result of a move terminal_test(s): true if the game is finished; false otherwise utility(s, p): the numerical value of terminal state s for player p  win: 1, lose :-1, draw: 0    Procedure  generate the whole game tree to leaves apply utility function to leaves back-up values from leaves toward the root:  Max node computes the max of its child values Min node computes the min of its chidl values   at root: choose move leading to the child of highest value  e.</description>
    </item>
    
    <item>
      <title>Sort 5 Elements in 7 Steps</title>
      <link>https://endfang.github.io/posts/sorting-five-elements-in-seven-steps/</link>
      <pubDate>Thu, 25 Oct 2018 23:05:18 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/sorting-five-elements-in-seven-steps/</guid>
      <description>*A smart and interesting sorting.
Suppose I have five elements: a, b, c, d, e. And I want to sort them in 7 steps:
Step 1: 3 comparisons: if a &amp;gt; b: swap(a, b);
if c &amp;gt; d: swap(c, d);
if b &amp;gt; d: swap(b, d), swap(a, c)
![Imgur](https://i.imgur.com/qzLVYmQ.png =200x200)
Step 2: 2 comparisons: now I need to find the position for e in {a, b, d}:
if (e &amp;lt; b) if (e &amp;lt; a) e a b d else a e b d else if (e &amp;lt; d) a b e d else a b d e !</description>
    </item>
    
    <item>
      <title>Three.js - shaderMaterial and vertex/fragment shaders</title>
      <link>https://endfang.github.io/posts/threejs-shader/</link>
      <pubDate>Wed, 13 Jun 2018 21:24:31 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/threejs-shader/</guid>
      <description>A vertex shader:
//WebGL Vertex Shader  uniform mat4 uMVMatrix; // Model-view matrix  uniform mat4 uPMatrix; // Projection matrix  uniform mat4 uNMatrix; // Normal matrix  attribute vec3 aVertexPosition; // Vertex position in object space  attribute vec3 aVertexNormal; // Vertex normal in object space  varying vec3 vPosition; // Vertex position (camera space)  varying vec3 vNormal; // Vertex normal (camera space)  void main(void) { vec4 camSpacePosition = uMVMatrix * vec4(aVertexPosition, 1.</description>
    </item>
    
    <item>
      <title>Derivative</title>
      <link>https://endfang.github.io/posts/recall-derivative/</link>
      <pubDate>Thu, 17 May 2018 17:20:53 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/recall-derivative/</guid>
      <description>The First Derivative The first derivative is the slop of the tangent line to the function at point x. It tells if the function is increasing or decreasing.
For example:
$f(x) = 3x^3 - 6x^2 + 2x -1$
$\frac{df}{dx} = 9x^2 - 12x + 2$
$x=0$, $\frac{df}{dx}(0) = 2$, so the function is increasing at x = 0.
$x = 1$, $\frac{df}{dx}(1) = 9 - 12 + 2 = -1$, so the function is decreasing at x = 1.</description>
    </item>
    
    <item>
      <title>Sphere Coordinates and Trigonometry</title>
      <link>https://endfang.github.io/posts/recall-sphere-coordinates/</link>
      <pubDate>Sun, 13 May 2018 12:24:46 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/recall-sphere-coordinates/</guid>
      <description>Sphere in 3-D three parameters: (r, θ, φ) $x = r \cdot sin(φ) cos(θ)$ $y = r \cdot sin(φ) sin(θ)$ $z = r \cdot cos(θ)$
Trigonometry $\cos(θ) = \frac{x}{\sqrt{x^{2} + y^{2}}}$ $\sin(θ) = \frac{y}{\sqrt{x^{2} + y^{2}}}$ $\tan(θ) = \frac{y}{x}$
arcsin/arccos/arctan is the inverse. e.g. $\tan(45^{\circ}) = 1$ $\arctan(1) = 45^{\circ}$</description>
    </item>
    
    <item>
      <title>Verb Tense in English</title>
      <link>https://endfang.github.io/posts/recall2/</link>
      <pubDate>Wed, 02 May 2018 12:39:12 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/recall2/</guid>
      <description>Each sentence takes a place in a specific moment, and aspects tell us the status of the action at that moment
Past Continuous/Progressive “We were sleeping when the sea creature attacked.”
Perfect “We had departed from Nantucket.”
Perfect Progressive “We had been sailing three weeks.”
Simple “We went to search a sea creature.” “Sea creature attacked us.”
 Present Continuous/Progressive “We’re preparing for their next mission.”
Perfect “We have built a special submarine for the search mission.</description>
    </item>
    
    <item>
      <title>Recall I</title>
      <link>https://endfang.github.io/posts/recall1/</link>
      <pubDate>Thu, 26 Apr 2018 13:03:56 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/recall1/</guid>
      <description>line in 3-D Define $\vec r_0$ and $\vec r$ are position vectors of $P_0$ and $P$, and $\vec a$ represents $\vec{P_0P}$.
if $\vec v$ is parallel to $\vec a$, then: $\vec{r} = \vec{r_0} + \vec{a}$ $\vec{a} = t\vec{v}$ $\vec{r} = \vec{r_0} + t\vec{v}$
in othe words, $(x_r, y_r, z_r) = (x_{r_0}, y_{r_0}, z_{r_0}) + t \cdot (x_v, y_v, z_v)$
sphere the sphere&amp;rsquo;s center point is $(x_0, y_0, z_0)$ radius = $r$ all point on surface: $(x, y, z)$ $(x - x_0)^{2} + (y - y_0)^{2} + (z - z_0)^{2} = r^2$</description>
    </item>
    
  </channel>
</rss>
