<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>procedural on After1995</title>
    <link>https://endfang.github.io/tags/procedural/</link>
    <description>Recent content in procedural on After1995</description>
    <image>
      <url>https://endfang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://endfang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 28 Feb 2022 17:07:50 +0800</lastBuildDate><atom:link href="https://endfang.github.io/tags/procedural/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TA Log 02282022</title>
      <link>https://endfang.github.io/posts/ta_log_02282022/</link>
      <pubDate>Mon, 28 Feb 2022 17:07:50 +0800</pubDate>
      
      <guid>https://endfang.github.io/posts/ta_log_02282022/</guid>
      <description>URP URP doesn’t support OnPreCull, OnPreRender, OnPostRener, and OnRenderImage. URP does support OnRenderObjectand OnWillRenderObject, but it doesn’t support recursive rendering. URP has 4 new hooks:
RenderPipelineManager.beginFrameRendering RenderPipelineManager.beginCameraRendering RenderPipelineManager.endCameraRendering RenderPipelineManager.endFrameRendering // we can subscribe these events private void OnEnable() { RenderPipelineManager.beginCameraRendering += ExecuteRenderActions; } public void ExecuteRenderActions(ScriptableRenderContext context, Camera camera) { // rendering code .. } Planar Reflection The idea is to create a reflected camera to render the screen from below, and render what the reflected camera sees on the planar.</description>
    </item>
    
  </channel>
</rss>
